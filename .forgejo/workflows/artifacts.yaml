# SPDX-FileCopyrightText: 2024 Mathieu Fenniak <mathieu@fenniak.net>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Release Artifacts

on:
  push:
    tags:
      - 'v*'

jobs:
  oci-container:
    runs-on: debian-latest
    container:
      options: --volume nix-forgejo-cache-public:/nix
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - run: apt-get update && apt-get install -y sudo podman # install-nix-actions requires `sudo`; and psql will be used below
      - uses: https://github.com/cachix/install-nix-action@91a071959513ca103b54280ac0bef5b825791d4d # v31
      # install-nix-action by default uses {{ github.token }} and configures it as a github token; makes sense, but
      # we're running as a Forgejo action so Forgejo puts its own token in {{ github.token }} which GitHub can't
      # understand. So we replace github.com in the access-token field of the nix.conf file.
      - run: sed -i 's/github.com/codeberg.org/' /etc/nix/nix.conf
      - name: nix build docker
        run: nix build .#docker
      # podman seems to not check remote hosts for blobs proactively, causing it to push upload existing layers if
      # there's no local information that they might exist upstream (https://github.com/containers/podman/issues/17892)
      # (maybe)?  This kinda sucks... so my thought to workaround it is: (a) load the new image; (b) pull "latest" from
      # upstream; any blobs that are available locally won't be pulled but maybe we'll cache that they're remote; (c)
      # push to remote; (d) update "latest" tag for next time.
      - name: load podman container
        run: gunzip < result | podman load
      - name: pull latest
        run: podman pull --creds=mfenniak:${{ secrets.TESTTRIM_PACKAGE_REGISTRY_PAT }} codeberg.org/testtrim/server:latest || true # ok to fail, expected if "latest" tag doesn't eixst
      - name: push versioned podman container
        # GITHUB_REF_NAME should be the tag name (eg. v0.2.1), but the container is built without the leading v...
        run: podman push --creds=mfenniak:${{ secrets.TESTTRIM_PACKAGE_REGISTRY_PAT }} codeberg.org/testtrim/server:${GITHUB_REF_NAME#v}
      - name: podman tag and push latest
        run: podman tag codeberg.org/testtrim/server:${GITHUB_REF_NAME#v} codeberg.org/testtrim/server:latest && podman push --creds=mfenniak:${{ secrets.TESTTRIM_PACKAGE_REGISTRY_PAT }} codeberg.org/testtrim/server:latest
